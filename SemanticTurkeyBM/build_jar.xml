<!--+
    |
    |           +=======================================+
    |           |  Java Firefox Extension Build System  |
    |           +=======================================+
    |
    +-->

<project default="final" basedir="." name="SemanticTurkey">


    <target name="start" depends="init">
    
<echo>======================================================================
               ${fullname} ${version} [${year}]
======================================================================
Building with ${ant.version}
----------------------------------------------------------------------
Using build file ${ant.file}
----------------------------------------------------------------------
Running on Java version ${ant.java.version} on ${os.name}
----------------------------------------------------------------------
Compiler options:
 - debug ......... [${compiler.debug}]
 - optimize ...... [${compiler.optimize}]
 - deprecation ... [${compiler.deprecation}]
======================================================================
</echo>
    </target>

    <target name="init">
        <!-- Set the timestamps -->
        <tstamp/>
    
        <property environment="env" />
    
        <!-- Detecting the current jvm -->
        <condition property="target.vm" value="1.6">
            <equals arg1="1.6" arg2="${ant.java.version}"/>
        </condition>
        <condition property="target.vm" value="1.5">
            <equals arg1="1.5" arg2="${ant.java.version}"/>
        </condition>
        <condition property="target.vm" value="1.4">
            <equals arg1="1.4" arg2="${ant.java.version}"/>
        </condition>
        <condition property="target.vm" value="1.3">
          <not>
            <or>
              <equals arg1="1.4" arg2="${ant.java.version}"/>
              <equals arg1="1.5" arg2="${ant.java.version}"/>
              <equals arg1="1.6" arg2="${ant.java.version}"/>
            </or>
          </not>
        </condition>
    
        <!-- Describe the location of the java runtime library on different systems -->
        <condition property="java.classes" value="/System/Library/Frameworks/JavaVM.framework/Classes/classes.jar">
          <equals arg1="Mac OS X" arg2="${os.name}"/>
        </condition>
        <condition property="java.classes" value="${env.JAVA_HOME}/lib/rt.jar">
           <not>
            <equals arg1="Mac OS X" arg2="${os.name}"/>
           </not>
        </condition>
    
        <!-- Allow users a chance to override without editing the main file -->
        <property file="${user.home}/${name}.build.properties"/>
        <property file="local.build.properties"/>
    
        <!-- Get the build properties from an external file -->
        <property file="build.properties"/>
        
        <!-- Set classpath -->
        <path id="classpath">
            <fileset dir="${lib}">
            <include name="*.jar"/>
            </fileset>
            <path location="${build}"/>
        </path>
    </target>

<!-- === Preparation ============================================= -->

    <target name="prepare" depends="init">
        <mkdir dir="${build}"/>
    </target>

	
<!-- === Generate JAR from SE Project ================================================= -->

    <target name="se_jar" depends="prepare">
        <javac sourcepath="" 
            srcdir="${se.src}"
            destdir="${se.build}"
            debug="${compiler.debug}"
            optimize="${compiler.optimize}"
            deprecation="${compiler.deprecation}"
            target="${target.vm}"
            source="${target.vm}"
            nowarn="${compiler.nowarn}"
            compiler="${compiler}">
            <!-- classpathref="classpath"> -->
           
        	<!-- include name="**/*.java"/ there should be no need for it! --> 
        </javac>
    	<echo message="${se.build}"/>
		<jar destfile="${extensions.dir.servlets}/servlet.jar" manifest="${se.project.location}/MANIFEST.MF"> 
			<fileset dir="${se.build}"/>
  		</jar>    	    	
    </target>	

	
	
<!-- === Compile BM Java Code ================================================= -->

    <target name="compile" depends="se_jar">
        <mkdir dir="${build}"/>
        <javac sourcepath="" 
            srcdir="${src}"
            destdir="${build}"
            debug="${compiler.debug}"
            optimize="${compiler.optimize}"
            deprecation="${compiler.deprecation}"
            target="${target.vm}"
            source="${target.vm}"
            nowarn="${compiler.nowarn}"
            compiler="${compiler}"
            classpathref="classpath">
            
            <include name="**/*.java"/>
        </javac>
        <copy todir="${build}">
            <fileset dir="${src}" includes="**/*.properties" />
            <filterset>
                <filter token="version" value="${version}"/>
                <filter token="fullname" value="${fullname}"/>
            </filterset>
        </copy>
    </target>

<!-- === Prepare The Distribution ================================================= -->

    <target name="dist" depends="compile" description="Create the distribution">
        <mkdir dir="${dist}"/>
        
        <copy todir="${dist}/chrome/semantic-turkey">
            <fileset dir="${src.extension}/chrome"
                includes="**" />
        </copy>
        
        <copy todir="${dist}/components">
            <fileset dir="${src.extension}/components" includes="*.js" />
            <fileset dir="${src.extension}/components" includes="*.xpt" />
        </copy>
        
    	<mkdir dir="${dist}/components/lib"/>
        <zip zipfile="${dist}/components/lib/${semturkeyjarname}.jar" basedir="${build}" includes="**"/>
    	
        <copy todir="${dist}/components/lib">
            <fileset dir="${lib}" includes="**" />
        </copy>
        
    	<copy todir="${dist}/components/data">
            <fileset dir="${data}" includes="**" />
        </copy>
    	
        <!-- <copy file="${xpcom}/firefoxClassLoader.jar" tofile="${dist}/components/firefoxClassLoader.jar" /> -->
    	<copy file="${xpcom}/javaFirefoxExtensionUtils.jar" tofile="${dist}/components/javaFirefoxExtensionUtils.jar" />

        <copy file="${src.extension}/install.rdf" tofile="${dist}/install.rdf" />
        <copy file="${src.extension}/chrome.manifest" tofile="${dist}/chrome.manifest"/>

        
        <!-- Copy the Plugins TODO: remove this and organize better -->
    	<!-- SemanticTurkey Ã¨ una nuova cartella creata appositamente da A.Turbati e che viene poi ispezionata dal plugin manager per installare i bundle -->
    	<!-- il plugin manager cerca dentro la cartella SemanticTurkey di TUTTE le estensioni di Firefox per dei bundle da installare -->
    	   		
    	<copy todir="${dist}/${extensions.dir}">
    	    <fileset dir="${extensions.dir}"/>
    	</copy>

    	
        <!-- touch the directory so that firefox registry reloads (helps during development) -->
        <touch>
            <fileset dir="${dist}"/>
        </touch>
    </target>

<!-- === Package The Distribution XPI ================================================= -->

    <target name="xpi" depends="dist" description="Create the XPI extension">
        <zip zipfile="${dist.target}/${dist.name}.xpi" basedir="${dist}" includes="**"/>
    </target>
	
<!-- === Delete the distribution folder ================================================= -->	
	
		<target name="delete_dist" depends="xpi" description="deletes the distribution folder">
			<delete dir="${dist}"/>
		</target>

<!-- === Final Empty Task ================================================= -->		
	
	<target name="final" depends="delete_dist"/>
	
</project>

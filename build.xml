<!--+
    |
    |           +=======================================+
    |           |  Semantic Turkey Extension Build System  |
    |           +=======================================+
    |
    +-->

<project default="final" basedir="." name="SemanticTurkey" xmlns:artifact="antlib:org.apache.maven.artifact.ant">

	<path id="maven-ant-tasks.classpath" path="system-resources/antlib/maven-ant-tasks-2.0.10.jar" />
	<typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="antlib:org.apache.maven.artifact.ant" classpathref="maven-ant-tasks.classpath" />


	<target name="start" depends="init">

		<echo>======================================================================
               ${fullname} ${version} [${year}]
======================================================================
Building with ${ant.version}
----------------------------------------------------------------------
Using build file ${ant.file}
----------------------------------------------------------------------
Running on Java version ${ant.java.version} on ${os.name}
----------------------------------------------------------------------
Compiler options:
 - debug ......... [${compiler.debug}]
 - optimize ...... [${compiler.optimize}]
 - deprecation ... [${compiler.deprecation}]
======================================================================
</echo>
	</target>

	<target name="init">
		<!-- Set the timestamps -->
		<tstamp>
			<format property="builddate" pattern="yyyy-MM-d" />
		</tstamp>

		<property environment="env" />

		<!-- Get the build properties from an external file -->
		<property file="build.properties" />

		<!-- Set classpath -->
		<path id="classpath">
			<fileset dir="${lib}">
				<include name="*.jar" />
			</fileset>
			<path location="${build}" />
		</path>
	</target>


	<!-- === Build Library Dir from Maven Dependencies ============================================= -->

	<target name="buildlib" depends="init">
		<delete>
			<fileset dir="${system.dir.lib}" includes="*.jar" />
		</delete>

		<artifact:pom id="stpom" file="${module.coreframework}/pom.xml" />
		<artifact:dependencies filesetId="dependency.fileset" pomRefId="stpom" />
		<copy todir="${system.dir.lib}">
			<fileset refid="dependency.fileset" />
			<!--
    	  <mapper classpathref="maven-ant-tasks.classpath"
    	          classname="org.apache.maven.artifact.ant.VersionMapper"
    	          from="${stdeps}" to="flatten" />
    	      -->
			<mapper type="flatten" />
		</copy>
	</target>

	<!-- === Compile and Generate JAR from SE Project ================================================= -->

	<target name="se_jar" depends="buildlib">
		<copy todir="${system.dir.extensions.service}">
			<fileset dir="${module.coreservices}/target" includes="*.jar" />
		</copy>
	</target>

	<!-- === Compile and Generate JAR from OntManager Project ================================================= -->

	<target name="ontmgr_jar" depends="se_jar">
		<copy todir="${system.dir.extensions.ontmanager}">
			<fileset dir="${module.ontmanager}/target" includes="*.jar" />
		</copy>
	</target>

	<!-- === Prepare The Distribution ================================================= -->

	<target name="dist" depends="ontmgr_jar" description="Compiles the Services Extensions (SE) Project and packages a jar inside the BM Project">
		<mkdir dir="${dist}" />

		<copy todir="${dist}/chrome/semantic-turkey">
			<fileset dir="${module.ffext.src}/chrome/semantic-turkey" includes="**" />
		</copy>

		<copy todir="${dist}/components">
			<fileset dir="${module.ffext.src}/components" includes="*.js" />
			<fileset dir="${module.ffext.src}/components" includes="*.xpt" />
		</copy>

		<copy todir="${dist}/components/lib">
			<fileset dir="${module.coreframework}/target" includes="*.jar" />
		</copy>

		<copy todir="${dist}/components/lib">
			<fileset dir="${system.dir.lib}" includes="**" />
		</copy>

		<copy todir="${dist}/components/data">
			<fileset dir="${system.dir.data}" includes="**" />
		</copy>

		<mkdir dir="${dist}/defaults" />
		<copy todir="${dist}/defaults">
			<fileset dir="${module.ffext.src}/defaults" includes="**" />
		</copy>

		<mkdir dir="${dist}/modules" />
		<copy todir="${dist}/modules">
			<fileset dir="${module.ffext.src}/modules" includes="**" />
		</copy>

		<copy file="${system.dir.xpcom}/javaFirefoxExtensionUtils.jar" tofile="${dist}/components/lib/javaFirefoxExtensionUtils.jar" />

		<copy file="${module.ffext.src}/install.rdf" tofile="${dist}/install.rdf" />
		<copy file="${module.ffext.src}/chrome.manifest" tofile="${dist}/chrome.manifest" />

		<copy todir="${dist}/extensions">
			<fileset dir="${system.dir.extensions}" />
		</copy>

		<!-- touch the directory so that firefox registry reloads (helps during development) -->
		<touch>
			<fileset dir="${dist}" />
		</touch>
	</target>

	<!-- === Package The Distribution XPI ================================================= -->

	<target name="xpi" depends="dist" description="Create the XPI extension">
		<zip zipfile="${dist.target}/${name}-${stpom.version}-${builddate}_b${buildversion}.xpi" basedir="${dist}" includes="**" />
	</target>

	<!-- === Delete the distribution folder ================================================= -->

	<target name="delete_dist" depends="xpi" description="deletes the distribution folder">
		<delete dir="${dist}" />
	</target>

	<!-- === Final Empty Task ================================================= -->

	<target name="final" depends="delete_dist" />

</project>

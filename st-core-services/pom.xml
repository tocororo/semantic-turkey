<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>it.uniroma2.art.semanticturkey</groupId>
		<artifactId>semanticturkey</artifactId>
		<version>3.0</version>
	</parent>

	<artifactId>st-core-services</artifactId>
	<name>Semantic Turkey CORE Services</name>
	<description>The set of core services bundled with the default Semantic Turkey XPI</description>
	<packaging>bundle</packaging>

	<developers>
		<developer>
			<id>starred</id>
			<name>Armando Stellato</name>
			<email>stellato@info.uniroma2.it</email>
			<url>http://art.uniroma2.it/stellato</url>
			<organization>ART Group, University of Rome, Tor Vergata</organization>
			<organizationUrl>http://art.uniroma2.it</organizationUrl>
		</developer>
		<developer>
			<id>turbati</id>
			<name>Andrea Turbati</name>
			<email>turbati@info.uniroma2.it</email>
			<url>http://art.uniroma2.it/turbati</url>
			<organization>ART Group, University of Rome, Tor Vergata</organization>
			<organizationUrl>http://art.uniroma2.it</organizationUrl>
		</developer>
	</developers>

	<dependencies>
		<dependency>
			<groupId>it.uniroma2.art.semanticturkey</groupId>
			<artifactId>st-core-framework</artifactId>
			<version>${project.version}</version>
		</dependency>
		
		<dependency>
			<groupId>it.uniroma2.art.sheet2rdf</groupId>
			<artifactId>sheet2rdf-osgi-bundle</artifactId>
			<version>${sheet2rdf.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring-security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring-security.version}</version>
		</dependency>

		<dependency>
			<groupId>it.uniroma2.art.semanticturkey</groupId>
			<artifactId>st-codegen-annotations</artifactId>
			<version>${project.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>it.uniroma2.art.semanticturkey</groupId>
			<artifactId>st-codegen-processor</artifactId>
			<version>${project.version}</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.1</version>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>com.springsource.org.aspectj.weaver</artifactId>
			<version>1.6.8.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>com.springsource.org.aspectj.runtime</artifactId>
			<version>1.6.8.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.rdf4j</groupId>
			<artifactId>rdf4j-rio-ntriples</artifactId>
			<version>${rdf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.rdf4j</groupId>
			<artifactId>rdf4j-queryresultio-sparqljson</artifactId>
			<version>${rdf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.rdf4j</groupId>
			<artifactId>rdf4j-queryrender</artifactId>
			<version>${rdf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>it.uniroma2.art.semanticturkey</groupId>
			<artifactId>st-changetracking-sail</artifactId>
			<version>${project.version}</version>
		</dependency>
	</dependencies>

	<build>

		<resources>
			<resource>
				<!-- we had problems in using standard wab deployment (referencing the 
					WEB-INF/classes from depending wabs) -->
				<!-- thus we have manually managed the webapp directory and we still 
					put the classes in the . position -->
				<directory>src/main/webapp</directory>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<fork>true</fork>
					<compilerArgument>-Ait.uniroma2.art.semanticturkey.generation.controller.path.prefix=${project.groupId}\/${project.artifactId}</compilerArgument>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>3.0.1</version>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<!-- <_wab>src/main/webapp</_wab> could also use src/main/resources 
							if you like -->
						<Bundle-SymbolicName>${project.groupId}.${project.artifactId}</Bundle-SymbolicName>
						<Webapp-Context>semanticturkey</Webapp-Context>
						<Web-ContextPath>semanticturkey</Web-ContextPath>
						<Export-Package>
							<!-- The following is required to make core service classes (SKOS[XL], 
								...) available for extensions -->
							{local-packages}
						</Export-Package>
						<Import-Package>
							it.uniroma2.art.coda.osgi.bundle,
							it.uniroma2.art.semanticturkey,
							it.uniroma2.art.semanticturkey.history,
							it.uniroma2.art.semanticturkey.exceptions,
							it.uniroma2.art.semanticturkey.ontology,
							it.uniroma2.art.semanticturkey.ontology.utilities,
							it.uniroma2.art.semanticturkey.plugin,
							it.uniroma2.art.semanticturkey.plugin.extpts,
							it.uniroma2.art.semanticturkey.project,
							it.uniroma2.art.semanticturkey.resources,
							it.uniroma2.art.semanticturkey.servlet,
							it.uniroma2.art.semanticturkey.utilities,
							it.uniroma2.art.semanticturkey.vocabulary,
							it.uniroma2.art.sheet2rdf.*,
							org.springframework.web.servlet.view,
							org.springframework.web.servlet,
							org.springframework.context.*,
							org.springframework.context.support,
							org.springframework.context.config,
							org.springframework.core,
							org.springframework.web.context,
							org.springframework.osgi.web.context.support,
							org.springframework.stereotype,
							org.springframework.ui,
							org.springframework.web.bind.annotation,
							org.springframework.web.servlet.mvc.annotation,
							org.osgi.framework,
							org.aopalliance.aop,
							javax.persistence,
							javax.validation,
							net.sf.cglib.proxy,
							net.sf.cglib.core,
							net.sf.cglib.reflect,
							org.springframework.core.convert, <!-- This dependency 
								is required for the ConversionServiceFactoryBean -->
							org.springframework.validation.beanvalidation,
							org.springframework.validation.annotation,
							org.jsoup,
							org.springframework.aop.framework,
							org.springframework.aop.framework.autoproxy,
							org.springframework.aop,
							<!-- The imports org.springframework.cglib.* seem necessary after 
								the move to Karaf -->
							org.springframework.cglib.proxy,
							org.springframework.cglib.core,
							org.springframework.cglib.reflect,
							javax.validation.bootstrap,
							javax.validation.constraints,
							javax.validation.spi,
							org.hibernate.validator,
							org.springframework.validation,
							javax.inject,
							org.springframework.beans.factory.config,
							org.springframework.beans.factory,
							javax.servlet.http,
							<!-- This dependency is required for the instantiation of the ST HTTP 
								Context -->
							it.uniroma2.art.semanticturkey.services.http,
							<!-- This dependency is required for the exception handler -->
							it.uniroma2.art.semanticturkey.mvc,
							<!-- These dependencies are required for multipart resolver -->
							org.springframework.web.multipart.commons,
							<!--org.apache.commons.fileupload;version="[1.2.0,2)", -->
							org.apache.commons.io,
							org.antlr.runtime.*
							*;resolution:=optional
						</Import-Package>
						<DynamicImport-Package>*</DynamicImport-Package>
					</instructions>
				</configuration>
			</plugin>
		</plugins>
		<finalName>${project.groupId}.${project.artifactId}</finalName>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.felix
										</groupId>
										<artifactId>
											maven-bundle-plugin
										</artifactId>
										<versionRange>
											[2.3.5,)
										</versionRange>
										<goals>
											<goal>manifest</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
<?xml version="1.0"?>
<!--  /*
  * The contents of this file are subject to the Mozilla Public License
  * Version 1.1 (the "License");  you may not use this file except in compliance
  * with the License.  You may obtain a copy of the License at
  * http://www.mozilla.org/MPL/
  *
  * Software distributed under the License is distributed on an "AS IS" basis,
  * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
  * the specific language governing rights and limitations under the License.
  *
  * The Original Code is SemanticTurkey.
  *
  * The Initial Developer of the Original Code is University of Roma Tor Vergata.
  * Portions created by University of Roma Tor Vergata are Copyright (C) 2007.
  * All Rights Reserved.
  *
  * SemanticTurkey was developed by the Artificial Intelligence Research Group
  * (art.uniroma2.it) at the University of Roma Tor Vergata (ART)
  * Current information about SemanticTurkey can be obtained at 
  * http://semanticturkey.uniroma2.it
  *
  */ -->

<bindings id="classTreeBindings"
   xmlns="http://www.mozilla.org/xbl"
   xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
 <binding id="myClasstree" extends="chrome://global/content/bindings/tree.xml#tree">
    <content>
      <children includes="treecols"/>
      <xul:stack flex="1">
        <xul:treerows class="tree-rows" flex="1">
          <children/>
        </xul:treerows>
      </xul:stack>
    </content>
    <implementation>
      <field name="itemid">5</field>
      <field name="rowid">5</field>
      <field name="treechildrenid">0</field>
      <field name="cnt">0</field>
	
	
	<method name="getCellNodeAt">
        <parameter name="row"/>
        <parameter name="col"/>
        <body>
          var view;
          try {
            view = this.contentView;
          } catch (ex){}
          if (view){
            var elem = view.getItemAtIndex(row);
            if (elem){
              var pos = ((document.getElementById(col).ordinal - 1) >> 1);
              return elem.firstChild.childNodes[pos];
            }
          }
          return null;
        </body>
      </method>
      <!-- NScarpato 27/05/2007 Metodo per ricavare l'elemento della'albero dalla label -->
		<method name="selectElementClass">
        <parameter name="tree"/>
        <parameter name="findName"/>
        <body>
        <![CDATA[
		var index = 0;
		while (tree.treeBoxObject.view.getItemAtIndex(index)!=null)
		{
			var current = tree.treeBoxObject.view.getItemAtIndex(index);
			var treerow = current.getElementsByTagName('treerow')[0];
	    	var treecell = treerow.getElementsByTagName('treecell')[0]; 	
			var label=treecell.getAttribute("label");
			if(label.indexOf('(')>-1){
				label=label.substring(0, label.indexOf('('));
			}
			if(label==findName){
				tree.view.selection.clearSelection();
				tree.view.selection.toggleSelect(index);
				tree.boxObject.scrollToRow(index);
				return;
			}
			index++;
		}
		]]>
        </body>
      </method>
    
			</implementation>
			
		<handlers>
				<handler event="click" button="0">    	   
       	     var treeBox = this.treeBoxObject;
				var node = null;
            	var row = {};
            	var col = {};
            	var obj = {};
            	treeBox.getCellAt(event.clientX,event.clientY,row,col,obj);
            	var colid;
            	if (typeof col.value == "object") { // FireFox 1.5
                    colid = col.value.id;
            	} else { // FireFox 1.0
                    colid = col.value;
            	}
		    	 var cellnode = this.getCellNodeAt(row.value, colid);
				
       			newParent=ClassTree.getNewParent();
				newParent=cellnode.getAttribute("label");
				if(newParent.indexOf('(')>-1){
       				newParent=newParent.substring(0, newParent.indexOf('('));
       			}
  
			</handler>
		
		</handlers>
	</binding>
</bindings>


<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:osgi="http://www.springframework.org/schema/osgi" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/osgi http://www.springframework.org/schema/osgi/spring-osgi.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">


	<!-- Scans the main package of this extension, and some packages provided 
		by ST framework -->
	<context:component-scan base-package="it.uniroma2.art.semanticturkey" />

	<!-- Registers the it.uniroma2.art.semanticturkey.repository.config.ReadOnlyRepositoryWrapperFactory -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="it.uniroma2.art.semanticturkey.repository.config.ReadOnlyRepositoryWrapperFactory.registerFactory" />
	</bean>

	<!-- Imports the MAPALE faÃ§ade -->
	<osgi:reference id="mediationFramework"
		interface="it.uniroma2.art.maple.orchestration.MediationFramework" />

	<!-- Retrieves coda osgi factory -->
	<osgi:reference id="codaOSGiFactory"
		interface="it.uniroma2.art.coda.osgi.bundle.CODAOSGiFactory" />

	<!-- Publishes the CODA-based implementation of the extension point URIGenerator -->
	<bean id="codaURIGeneratorFactory"
		class="it.uniroma2.art.semanticturkey.plugin.impls.urigen.CODAURIGeneratorFactory" />

	<osgi:service interface="it.uniroma2.art.semanticturkey.plugin.PluginFactory"
		ref="codaURIGeneratorFactory">
		<osgi:service-properties>
			<entry key="it.uniroma2.art.semanticturkey.extensionpoint"
				value="it.uniroma2.art.semanticturkey.plugin.extpts.URIGenerator" />
		</osgi:service-properties>
	</osgi:service>

	<!-- Publishes the native template-based implementation of the extension 
		point URIGenerator -->
	<bean id="nativeTemplateBasedURIGeneratorFactory"
		class="it.uniroma2.art.semanticturkey.plugin.impls.urigen.NativeTemplateBasedURIGeneratorFactory" />

	<osgi:service interface="it.uniroma2.art.semanticturkey.plugin.PluginFactory"
		ref="nativeTemplateBasedURIGeneratorFactory">
		<osgi:service-properties>
			<entry key="it.uniroma2.art.semanticturkey.extensionpoint"
				value="it.uniroma2.art.semanticturkey.plugin.extpts.URIGenerator" />
		</osgi:service-properties>
	</osgi:service>

	<!-- Publishes the RDFS-based implementation of the extension point RenderingEngine -->
	<bean id="rdfsRenderingEngineFactory"
		class="it.uniroma2.art.semanticturkey.plugin.impls.rendering.RDFSRenderingEngineFactory" />

	<osgi:service interface="it.uniroma2.art.semanticturkey.plugin.PluginFactory"
		ref="rdfsRenderingEngineFactory">
		<osgi:service-properties>
			<entry key="it.uniroma2.art.semanticturkey.extensionpoint"
				value="it.uniroma2.art.semanticturkey.plugin.extpts.RenderingEngine" />
		</osgi:service-properties>
	</osgi:service>

	<!-- Publishes the SKOS-based implementation of the extension point RenderingEngine -->
	<bean id="skosRenderingEngineFactory"
		class="it.uniroma2.art.semanticturkey.plugin.impls.rendering.SKOSRenderingEngineFactory" />

	<osgi:service interface="it.uniroma2.art.semanticturkey.plugin.PluginFactory"
		ref="skosRenderingEngineFactory">
		<osgi:service-properties>
			<entry key="it.uniroma2.art.semanticturkey.extensionpoint"
				value="it.uniroma2.art.semanticturkey.plugin.extpts.RenderingEngine" />
		</osgi:service-properties>
	</osgi:service>

	<!-- Publishes the SKOSXL-based implementation of the extension point RenderingEngine -->
	<bean id="skosxlRenderingEngineFactory"
		class="it.uniroma2.art.semanticturkey.plugin.impls.rendering.SKOSXLRenderingEngineFactory" />

	<osgi:service interface="it.uniroma2.art.semanticturkey.plugin.PluginFactory"
		ref="skosxlRenderingEngineFactory">
		<osgi:service-properties>
			<entry key="it.uniroma2.art.semanticturkey.extensionpoint"
				value="it.uniroma2.art.semanticturkey.plugin.extpts.RenderingEngine" />
		</osgi:service-properties>
	</osgi:service>

	<!-- Publishes the OntoLex-Lemon-based implementation of the extension point 
		RenderingEngine -->
	<bean id="ontolexLemonRenderingEngineFactory"
		class="it.uniroma2.art.semanticturkey.plugin.impls.rendering.OntoLexLemonRenderingEngineFactory" />

	<osgi:service interface="it.uniroma2.art.semanticturkey.plugin.PluginFactory"
		ref="ontolexLemonRenderingEngineFactory">
		<osgi:service-properties>
			<entry key="it.uniroma2.art.semanticturkey.extensionpoint"
				value="it.uniroma2.art.semanticturkey.plugin.extpts.RenderingEngine" />
		</osgi:service-properties>
	</osgi:service>

	<!-- Publishes the MetadataRegistry as an OSGi service -->
	<bean id="metadataRegistry"
		class="it.uniroma2.art.semanticturkey.resources.impl.MetadataRegistryBackendImpl">
		<constructor-arg ref="mediationFramework" />
		<constructor-arg ref="extensionPointManager" />
	</bean>

	<osgi:service
		interface="it.uniroma2.art.semanticturkey.resources.MetadataRegistryBackend"
		ref="metadataRegistry">
	</osgi:service>

	<!-- Publishes the ResourceLocator as an OSGi service -->
	<bean id="resourceLocator"
		class="it.uniroma2.art.semanticturkey.data.access.ResourceLocator" />

	<osgi:service
		interface="it.uniroma2.art.semanticturkey.data.access.ResourceLocator"
		ref="resourceLocator">
	</osgi:service>

	<!-- Publishes CustomFormManager as an OSGi service (bean instance generated 
		based on annotations) -->
	<osgi:service
		interface="it.uniroma2.art.semanticturkey.customform.CustomFormManager"
		ref="customFormManager">
	</osgi:service>

	<!-- Publishes CODACoreProvider as an OSGi service (bean instance generated 
		based on annotations) -->
	<osgi:service
		interface="it.uniroma2.art.semanticturkey.customform.CODACoreProvider"
		ref="CODACoreProvider">
	</osgi:service>


	<!-- Instantiates the ExtensionPointManager implementation -->
	<bean id="extensionPointManager"
		class="it.uniroma2.art.semanticturkey.extension.impl.ExtensionPointManagerImpl" />

	<!-- Publishes the ExtensionPointerManager as an OSGi service -->
	<osgi:service
		interface="it.uniroma2.art.semanticturkey.extension.ExtensionPointManager"
		ref="extensionPointManager">
	</osgi:service>

	<!-- Publishes the URIGenerator extension point -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.extpts.urigen.URIGeneratorExtensionPoint" />
	</osgi:service>

	<!-- Publishes the Native Template-based URIGenerator extension -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.impl.urigen.template.NativeTemplateBasedURIGeneratorFactory" />
	</osgi:service>

	<!-- Publishes the CODA-based URIGenerator extension -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.impl.urigen.coda.CODAURIGeneratorFactory" />
	</osgi:service>

	<!-- Publishes the RenderingEngine extension point -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.extpts.rendering.RenderingEngineExtensionPoint" />
	</osgi:service>

	<!-- Publishes the RDFSRenderingEngine extension -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.impl.rendering.rdfs.RDFSRenderingEngineFactory" />
	</osgi:service>

	<!-- Publishes the SKOSRenderingEngine extension -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.impl.rendering.skos.SKOSRenderingEngineFactory" />
	</osgi:service>

	<!-- Publishes the SKOSXLRenderingEngine extension -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.impl.rendering.skosxl.SKOSXLRenderingEngineFactory" />
	</osgi:service>

	<!-- Publishes the OntoLexLemonRenderingEngine extension -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.impl.rendering.ontolexlemon.OntoLexLemonRenderingEngineFactory" />
	</osgi:service>

	<!-- Publishes the RDFTransformer extension point -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.extpts.rdftransformer.RDFTransformerExtensionPoint" />
	</osgi:service>

	<!-- Publishes the DeletePropertyValueRDFTransformer extension -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.impl.rdftransformer.deleteproperty.DeletePropertyValueRDFTransformerFactory" />
	</osgi:service>

	<!-- Publishes the SPARQLRDFTransformer extension -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.impl.rdftransformer.sparql.SPARQLRDFTransformerFactory" />
	</osgi:service>

	<!-- Publishes the UpdatePropertyValueRDFTranformerFactory extension -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.impl.rdftransformer.updateproperty.UpdatePropertyValueRDFTranformerFactory" />
	</osgi:service>

	<!-- Publishes the XLabelDereificationRDFTransformerFactory extension -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.impl.rdftransformer.xlabeldereification.XLabelDereificationRDFTransformerFactory" />
	</osgi:service>

	<!-- Publishes the XNoteDereificationRDFTransformerFactory extension -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.impl.rdftransformer.xnotedereification.XNoteDereificationRDFTransformerFactory" />
	</osgi:service>

	<!-- Publishes the PropertyNormalizerRDFTransformerFactory extension -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.impl.rdftransformer.propertynormalizer.PropertyNormalizerTransformerFactory" />
	</osgi:service>

	<!-- Publishes the CollaborationBackend extension point -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.extpts.collaboration.CollaborationBackendExtensionPoint" />
	</osgi:service>

	<!-- Publishes the JiraBackend extension -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.impl.collaboration.jira.JiraBackendFactory" />
	</osgi:service>

	<!-- Publishes the DatasetMetadataExporter extension point -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.extpts.datasetmetadata.DatasetMetadataExporterExtensionPoint" />
	</osgi:service>

	<!-- Publishes the ADMSDatasetMetadataExporter extension -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.impl.datasetmetadata.adms.ADMSDatasetMetadataExporterFactory" />
	</osgi:service>

	<!-- Publishes the DCATDatasetMetadataExporter extension -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.impl.datasetmetadata.dcat.DCATDatasetMetadataExporterFactory" />
	</osgi:service>

	<!-- Publishes the DCATAPDatasetMetadataExporter extension -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.impl.datasetmetadata.dcatap.DCATAPDatasetMetadataExporterFactory" />
	</osgi:service>

	<!-- Publishes the VOIDLIMEPDatasetMetadataExporter extension -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.impl.datasetmetadata.voidlime.VOIDLIMEDatasetMetadataExporterFactory" />
	</osgi:service>

	<!-- Publishes the RepositoryImplConfigurer extension point -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.extpts.repositoryimplconfigurer.RepositoryImplConfigurerExtensionPoint" />
	</osgi:service>

	<!-- Publishes the PredefinedRepositoryImplConfigurer extension -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.impl.repositoryimplconfigurer.predefined.PredefinedRepositoryImplConfigurerFactory" />
	</osgi:service>

	<!-- Publishes the SearchStrategy extension point -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.extpts.search.SearchStrategyExtensionPoint" />
	</osgi:service>

	<!-- Publishes the GraphDBSearchStrategy extension -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.impl.search.graphdb.GraphDBSearchStrategyFactory" />
	</osgi:service>

	<!-- Publishes the Regex extension -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.impl.search.regex.RegexSearchStrategyFactory" />
	</osgi:service>

	<!-- Publishes the SPARQLStore -->

	<osgi:service auto-export="interfaces">
		<bean class="it.uniroma2.art.semanticturkey.config.sparql.SPARQLStore" />
	</osgi:service>

	<!-- Publishes the SPARQLParameterizationStore -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.config.sparql.SPARQLParameterizationStore" />
	</osgi:service>
	
	<!-- Publishes the AdvancedGraphApplicationStore -->

	<osgi:service auto-export="interfaces">
		<bean class="it.uniroma2.art.semanticturkey.config.sheet2rdf.AdvancedGraphApplicationStore" />
	</osgi:service>

	<!-- Publishes the ProjectMetadataStore -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.settings.metadata.ProjectMetadataStore" />
	</osgi:service>

	<!-- Publishes the CustomSearchStore -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.settings.search.CustomSearchStore" />
	</osgi:service>
	
	<!-- Publishes the Exporter -->

	<osgi:service auto-export="interfaces">
		<bean class="it.uniroma2.art.semanticturkey.config.exporter.Exporter" />
	</osgi:service>

	<!-- Publishes the Deployer extension point -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.extpts.deployer.DeployerExtensionPoint" />
	</osgi:service>

	<!-- Publishes the StreamSourcedDeployer extension point -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.extpts.deployer.StreamSourcedDeployerExtensionPoint" />
	</osgi:service>

	<!-- Publishes the RepositorySourcedDeployer extension point -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.extpts.deployer.RepositorySourcedDeployerExtensionPoint" />
	</osgi:service>

	<!-- Publishes the GraphStore HTTP Deployer extension -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.impl.deployer.sparql.GraphStoreHTTPDeployerFactory" />
	</osgi:service>

	<!-- Publishes the HTTP Deployer extension -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.impl.deployer.http.HTTPDeployerFactory" />
	</osgi:service>

	<!-- Publishes the SFTP Deployer extension -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.impl.deployer.sftp.SFTPDeployerFactory" />
	</osgi:service>

	<!-- Publishes the ReformattingExporter extension point -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.extpts.reformattingexporter.ReformattingExporterExtensionPoint" />
	</osgi:service>

	<!-- Publishes the RDFSerializingExporter extension -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.impl.reformattingexporter.rdfserializer.RDFSerializingExporterFactory" />
	</osgi:service>

	<!-- Publishes the ZthesSerializingExporter extension -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.impl.reformattingexporter.zthesserializer.ZthesSerializingExporterFactory" />
	</osgi:service>

	<!-- Publishes the RDFLifter extension point -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.extpts.rdflifter.RDFLifterExtensionPoint" />
	</osgi:service>

	<!-- Publishes the RDFDeserializingLifter extension -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.impl.rdflifter.rdfdeserializer.RDFDeserializingLifterFactory" />
	</osgi:service>

	<!-- Publishes the ZthesDeserializingLifter extension -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.impl.rdflifter.zthesdeserializer.ZthesDeserializingLifterFactory" />
	</osgi:service>

	<!-- Publishes the Loader extension point -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.extpts.loader.LoaderExtensionPoint" />
	</osgi:service>

	<!-- Publishes the StreamTargetingLoader extension point -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.extpts.loader.StreamTargetingLoaderExtensionPoint" />
	</osgi:service>

	<!-- Publishes the RepositoryTargetingLoader extension point -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.extpts.loader.RepositoryTargetingLoaderExtensionPoint" />
	</osgi:service>

	<!-- Publishes the SFTP Loader extension -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.impl.loader.sftp.SFTPLoaderFactory" />
	</osgi:service>

	<!-- Publishes the HTTP Loader extension -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.impl.loader.http.HTTPLoaderFactory" />
	</osgi:service>

	<!-- Publishes the SFTP Loader extension -->

	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.impl.loader.sparql.GraphStoreHTTPLoaderFactory" />
	</osgi:service>
	
	<!-- Publishes the DatasetCatalogConnector extension point -->
	
	<osgi:service auto-export="interfaces">
		<bean
			class="it.uniroma2.art.semanticturkey.extension.extpts.datasetcatalog.DatasetCatalogConnectorExtensionPoint" />
	</osgi:service>

	<!-- Publishes the connector to LOV -->

	<osgi:service auto-export="interfaces">
		<bean class="it.uniroma2.art.semanticturkey.extension.impl.datasetcatalog.lov.LOVConnectorFactory" />
	</osgi:service>

	<!-- Publishes the connector to EU ODP -->

	<osgi:service auto-export="interfaces">
		<bean class="it.uniroma2.art.semanticturkey.extension.impl.datasetcatalog.euodp.EUODPConnectorFactory" />
	</osgi:service>


	<!-- Publishes the connector to LOD Cloud -->

	<osgi:service auto-export="interfaces">
		<bean class="it.uniroma2.art.semanticturkey.extension.impl.datasetcatalog.lodcloud.LODCloudConnectorFactory" />
	</osgi:service>

	<!-- Publishes the Importer -->

	<osgi:service auto-export="interfaces">
		<bean class="it.uniroma2.art.semanticturkey.config.importer.Importer" />
	</osgi:service>

</beans>
'@type': it.uniroma2.art.semanticturkey.config.customservice.CustomService
name: SKOSReport
operations:
 - '@type': it.uniroma2.art.semanticturkey.extension.impl.customservice.sparql.SPARQLOperation
   name: getNumberOfTopConcepts
   returns:
     name: integer
   authorization: rdf(concept), R
   sparql: |
    PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
    SELECT (COUNT(DISTINCT ?c) as ?topConceptCount) WHERE {
      GRAPH ?workingGraph {
        ?resource skos:hasTopConcept|^skos:isTopConceptOf ?c
      }
    }
 - '@type': it.uniroma2.art.semanticturkey.extension.impl.customservice.sparql.SPARQLOperation
   name: getNumberOfConcepts
   returns:
     name: integer
   authorization: rdf(concept), R
   sparql: |
    PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
    PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
    SELECT (COUNT(DISTINCT ?c) as ?conceptCount) WHERE {
      ?metaCls rdfs:subClassOf* skos:Concept .
      GRAPH ?workingGraph {
        ?c a ?metaCls
      }
    }
 - '@type': it.uniroma2.art.semanticturkey.extension.impl.customservice.sparql.SPARQLOperation
   name: getNumberOfCollections
   returns:
     name: integer
   authorization: rdf(skosCollection), R
   sparql: |
    PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
    PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
    SELECT (COUNT(DISTINCT ?c) as ?collectionCount) WHERE {
      ?metaCls rdfs:subClassOf* skos:Collection .
      GRAPH ?workingGraph {
        ?c a ?metaCls
      }
    }
 - '@type': it.uniroma2.art.semanticturkey.extension.impl.customservice.sparql.SPARQLOperation
   name: getNumberOfSchemes
   returns:
     name: integer
   authorization: rdf(conceptScheme), R
   sparql: |
    PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
    PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
    SELECT (COUNT(DISTINCT ?c) as ?collectionCount) WHERE {
      ?metaCls rdfs:subClassOf* skos:ConceptScheme .
      GRAPH ?workingGraph {
        ?c a ?metaCls
      }
    }
 - '@type': it.uniroma2.art.semanticturkey.extension.impl.customservice.sparql.SPARQLOperation
   name: getNumberOfResourcesPerScheme
   returns:
     name: List
     typeArguments:
      - name: AnnotatedValue
        typeArguments:
         - name: IRI
   authorization: rdf(conceptScheme), R
   sparql: |
    PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
    SELECT ?scheme (COUNT(DISTINCT ?resource) as ?attr_resCount) {
     GRAPH ?workingGraph {
       ?resource skos:topConceptOf|^skos:hasTopConcept ?scheme
       FILTER(isIRI(?resource))
     }
    }
    GROUP BY ?scheme
    ORDER BY DESC(?attr_resCount)
 - '@type': it.uniroma2.art.semanticturkey.extension.impl.customservice.sparql.SPARQLOperation
   name: checkUseOfExtendedHierarchicalProperties
   returns:
     name: boolean
   authorization: rdf(concept, taxonomy), R
   sparql: |
    PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
    ASK {
     {
       ?prop rdfs:subPropertyOf+ skos:broader .
       FILTER NOT EXISTS { ?prop rdfs:subPropertyOf* skos:broadMatch }
     } UNION {
       ?prop rdfs:subPropertyOf+ skos:narrower
      FILTER NOT EXISTS { ?prop rdfs:subPropertyOf* skos:narrowMatch }
     }
     GRAPH ?workingGraph {
       ?c1 ?prop ?c2
     }
    }
 - '@type': it.uniroma2.art.semanticturkey.extension.impl.customservice.sparql.SPARQLOperation
   name: getNumberOfConceptsWithMultipleParents
   returns:
     name: boolean
   authorization: rdf(concept, taxonomy), R
   sparql: |
    PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
    PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
    SELECT (COUNT (DISTINCT ?c) as ?conceptCount) {
      ?broadProp1 rdfs:subPropertyOf* skos:broader .
      FILTER NOT EXISTS {
        ?broadProp1 rdfs:subPropertyOf* skos:broadMatch .
      }
      ?narrowProp1 rdfs:subPropertyOf* skos:narrower .
      FILTER NOT EXISTS {
        ?narrowProp1 rdfs:subPropertyOf* skos:narrowMatch .
      }
      ?broadProp2 rdfs:subPropertyOf* skos:broader .
      FILTER NOT EXISTS {
        ?broadProp2 rdfs:subPropertyOf* skos:broadMatch .
      }
      ?narrowProp2 rdfs:subPropertyOf* skos:narrower .
      FILTER NOT EXISTS {
        ?narrowProp2 rdfs:subPropertyOf* skos:narrowMatch .
      }
      GRAPH ?workingGraph {
        { ?c ?broadProp1 ?c1 } UNION { ?c1 ?narrowProp1 ?c }
        { ?c ?broadProp2 ?c2 } UNION { ?c2 ?narrowProp2 ?c }
        FILTER(!sameTerm(?c1,?c2))
      }
    }
    